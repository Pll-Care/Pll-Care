spring:
  profiles:
    active: local
    include:
      - secret
    #Database
  #  datasource:
  #    url: jdbc:h2:tcp://localhost/~/userdb
  #    username: sa
  #    password:
  #    driver-class-name: org.h2.Driver

  #    driver-class-name: com.mysql.cj.jdbc.Driver
  #    url: jdbc:mysql://localhost:3306/fullcare?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
  #    username: root
  #    password: 1234

  #  #  ## AWS RDS 설정
  #    driver-class-name: com.mysql.cj.jdbc.Driver
  #    url: jdbc:mysql://fullcare.ctyerwfyq4ca.ap-northeast-2.rds.amazonaws.com:3306/fullcare
  #    username: root
  #    password: fullcare1234

  # JPA
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false

  # Multipart 설정
  servlet:
    multipart:
      max-file-size: 10MB # 요청한 파일 한 개의 크기
      max-request-size: 10MB # 요청한 파일 전체의 크기

# Logging
logging:
  level:
    root: info
    com:
      amazonaws:
        util:
          EC2MetadataUtils: ERROR

#springdoc swagger
springdoc:
  api-docs:
    path: /api/docs # 접속 path 설정

  swagger-ui:
    path: /api/swagger-ui # 접속 path 설정
    display-request-duration: true  # try it out 을 했을 때 request duration 을 추가로 찍어줌

  cache:
    disabled: true # swagger cache 설정

## OAuth2
#spring.security.oauth2.client:
#  registration:
#    google:
#      client-id: 797403577295-spn5skte9mtn11n6pu3nqnisd4eojl1h.apps.googleusercontent.com
#      client-secret: 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
#      redirect-uri: "{baseUrl}/login/oauth2/{registrationId}"
#      scope:
#        - profile
#        - email
#    naver:
#      client-id: F0FHS9cOgTOnH4UfsfZ2
#      client-secret: VI0YYMs2fa
#      client-name: Naver
#      redirect-uri: "{baseUrl}/login/oauth2/{registrationId}"
#      authorization-grant-type: authorization_code
#      scope:
#        - name
#        - email
#        - profile_image
#    kakao:
#      client-id: 0561aec6f0dfa0b45d48e2bc97941e06
#      client-secret: q2u2iqgjGq8MmE9vezAe2KCSm332EOUv
#      client-name: Kakao
#      client-authentication-method: client_secret_post
#      redirect-uri: "{baseUrl}/login/oauth2/{registrationId}"
#      authorization-grant-type: authorization_code
#      scope:
#        - profile_nickname
#        - account_email
#        - profile_image
#  provider:
#    naver:
#      authorization-uri: https://nid.naver.com/oauth2.0/authorize
#      token-uri: https://nid.naver.com/oauth2.0/token
#      user-info-uri: https://openapi.naver.com/v1/nid/me
#      user-name-attribute: response
#    kakao:
#      authorization-uri: https://kauth.kakao.com/oauth/authorize
#      token-uri: https://kauth.kakao.com/oauth/token
#      user-info-uri: https://kapi.kakao.com/v2/user/me
#      user-name-attribute: id
#
#
## JWT
#jwt:
#  secret: c2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQtc2lsdmVybmluZS10ZWNoLXNwcmluZy1ib290LWp3dC10dXRvcmlhbC1zZWNyZXQK
#
#  access:
#    header: Authorization
#    token-validity-in-seconds: 360000
#
#  refresh:
#    header: Authorization-refresh
#    token-validity-in-seconds: 86400
#
#
#
#
#
## AWS S3
#cloud:
#  aws:
#    s3:
#      bucket: fullcared
#    credentials:
#      access-key: AKIARPK2GG2JA63IKXJS
#      secret-key: 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
#    region:
#      static: ap-northeast-2
#      auto: false
#    stack:
#      auto: false